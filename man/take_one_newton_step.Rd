% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper-functions.R
\name{take_one_newton_step}
\alias{take_one_newton_step}
\title{Perform One Newton Update Step (Internal)}
\usage{
take_one_newton_step(
  beta,
  design,
  outcome,
  neg_gradient,
  hessian,
  neg_log_likelihood,
  solver = "qr",
  epsilon_small = 1e-08
)
}
\arguments{
\item{beta}{Numeric vector of current coefficients.}

\item{design}{Numeric design matrix.}

\item{outcome}{Numeric vector of outcomes.}

\item{neg_gradient}{Function to compute the negative gradient.}

\item{hessian}{Function to compute the Hessian matrix.}

\item{neg_log_likelihood}{Function to compute the negative log-likelihood.}

\item{solver}{Character string: "qr" (default) or "pseudo".}

\item{epsilon_small}{Small numeric value to avoid division by zero (default: 1e-8).}
}
\value{
A list with elements:
\describe{
\item{beta}{The updated coefficient vector.}
\item{neg_log_likelihood}{The negative log-likelihood at the updated beta.}
}
}
\description{
This function performs a single Newton update step using either a QR-based weighted
least squares solver or a pseudo-inverse solver. This facilitates unit-testing one step
of Newton's method.
}
\keyword{internal}
